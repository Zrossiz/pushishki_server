// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String
  password  String
  role      String
  Token     Token[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Token {
  token  String   @unique
  exp    DateTime
  userId Int      @map("user_id")
  user   User     @relation(fields: [userId], references: [id])

  @@map("tokens")
}

model Country {
  id        Int       @id @default(autoincrement())
  title     String
  slug      String
  image     String
  Brand     Brand[]
  Product   Product[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("countries")
}

model Brand {
  id          Int       @id @default(autoincrement())
  countryId   Int       @map("country_id")
  title       String
  slug        String
  image       String
  description String
  Product     Product[]
  country     Country   @relation(fields: [countryId], references: [id])
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("brands")
}

model Product {
  id                 Int               @id @default(autoincrement())
  categoryId         Int               @map("category_id")
  brandId            Int               @map("brand_id")
  countryId          Int               @map("country_id")
  title              String
  description        String
  articul            Int
  gearbox            String
  battery            String
  maximumLoad        Int               @map("maximum_load")
  assembledModelSize String            @map("assembled_model_size")
  modelSizeInPackage String            @map("model_size_in_package")
  video              String
  preview            String
  bestseller         Boolean           @default(false)
  new                Boolean           @default(false)
  inStock            Boolean           @default(true) @map("in_stock")
  defaultPrice       Int               @default(0) @map("default_price")
  categorySlug       String            @map("category_slug")
  brandName          String            @map("brand_name")
  countryName        String            @map("country_name")
  country            Country           @relation(fields: [countryId], references: [id])
  brand              Brand             @relation(fields: [brandId], references: [id])
  category           Category          @relation(fields: [categoryId], references: [id])
  Basket             Basket[]
  Review             Review[]
  Product_variant    Product_variant[]
  createdAt          DateTime          @default(now()) @map("created_at")
  updatedAt          DateTime          @updatedAt @map("updated_at")
  colors             Color[]
  ProductsColors     ProductsColors[]

  @@map("products")
}

model Product_variant {
  id                 Int      @id @default(autoincrement())
  productId          Int      @map("product_id")
  colorId            Int      @map("color_id")
  description        String
  articul            Int
  gearbox            String
  battery            String
  maximumLoad        String   @map("maximum_load")
  Int                String   @map("assembled_model_size")
  modelSizeInPackage String   @map("model_size_in_package")
  video              String
  inStock            Boolean  @default(true) @map("in_stock")
  price              Int      @default(0)
  categorySlug       String   @map("category_slug")
  brandName          String   @map("brand_name")
  countryName        String   @map("country_name")
  product            Product  @relation(fields: [productId], references: [id])
  color              Color    @relation(fields: [colorId], references: [id])
  Basket             Basket[]

  @@map("product_variants")
}

model Review {
  id          Int      @id @default(autoincrement())
  productId   Int      @map("product_id")
  name        String
  title       String
  description String
  rating      Int
  product     Product  @relation(fields: [productId], references: [id])
  active      Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("reviews")
}

model Category {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String
  description String
  image       String
  Product     Product[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("categories")
}

model Basket {
  id              Int             @id @default(autoincrement())
  productId       Int             @map("product_id")
  variantId       Int             @map("variant_id")
  orderId         Int             @map("order_id")
  name            String
  lastname        String
  secondname      String
  phone           String
  count           Int
  price           Int
  Product_variant Product_variant @relation(fields: [variantId], references: [id])
  Product         Product         @relation(fields: [productId], references: [id])
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @updatedAt @map("updated_at")
  Order           Order?          @relation(fields: [orderId], references: [id])

  @@map("basket")
}

model Order {
  id         Int      @id @default(autoincrement())
  orderId    Basket[]
  name       String
  lastname   String
  secondname String
  phone      String
  price      Int
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("orders")
}

model Color {
  id              Int               @id @default(autoincrement())
  color           String
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  products        Product[]
  ProductsColors  ProductsColors[]
  Product_variant Product_variant[]

  @@map("colors")
}

model ProductsColors {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  colorId   Int     @map("color_id")
  product   Product @relation(fields: [productId], references: [id])
  color     Color   @relation(fields: [colorId], references: [id])

  @@map("products_colors")
}
