// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  role      String
  Token     Token[]
  Review    Review[]
  Orders    Orders[]

  @@map("users")
}

model Token {
  token  String   @unique
  exp    DateTime
  userId Int      @map("user_id")
  user   User     @relation(fields: [userId], references: [id])

  @@map("tokens")
}

model Country {
  id        Int       @id @default(autoincrement())
  title     String
  image     String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  Brand     Brand[]
  Product   Product[]

  @@map("countries")
}

model Brand {
  id          Int       @id @default(autoincrement())
  countryId   Int       @map("country_id")
  title       String
  image       String
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  Product     Product[]
  country     Country   @relation(fields: [countryId], references: [id])

  @@map("brands")
}

model Product {
  id                   Int               @id @default(autoincrement())
  categoryId           Int               @map("category_id")
  brandId              Int               @map("brand_id")
  countryId            Int               @map("country_id")
  title                String
  description          String
  articul              String
  gearbox              String
  battery              String
  maximum_load         String
  assembled_model_size String
  model_sizeIn_package String
  video                String
  createdAt            DateTime          @default(now()) @map("created_at")
  updatedAt            DateTime          @updatedAt @map("updated_at")
  country              Country           @relation(fields: [countryId], references: [id])
  brand                Brand             @relation(fields: [brandId], references: [id])
  category             Category          @relation(fields: [categoryId], references: [id])
  ordersId             Int?
  Orders               Orders[]
  Review               Review[]
  Product_variant      Product_variant[]

  @@map("products")
}

model Product_variant {
  id        Int      @id @default(autoincrement())
  productId Int      @map("product_id")
  color     String
  price     Int
  images    String
  product   Product  @relation(fields: [productId], references: [id])
  Orders    Orders[]

  @@map("product_variants")
}

model Review {
  id          Int      @id @default(autoincrement())
  productId   Int      @map("product_id")
  userId      Int      @map("user_id")
  title       String
  description String
  rating      Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])

  @@map("reviews")
}

model Category {
  id          Int       @id @default(autoincrement())
  productId   Int       @map("product_id")
  title       String
  description String
  image       String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  Product     Product[]

  @@map("categories")
}

model Orders {
  id                Int             @id @default(autoincrement())
  userId            Int             @map("user_id")
  productId         Int             @map("product_id")
  variantId         Int             @map("variant_id")
  name              String
  lastname          String
  secondname        String
  phone             String
  count             Int
  price             Int
  Product_variant   Product_variant @relation(fields: [product_variantId], references: [id])
  Product           Product         @relation(fields: [productId], references: [id])
  User              User            @relation(fields: [userId], references: [id])
  product_variantId Int

  @@map("orders")
}
