// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Country {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  slug        String
  image       String?
  Brand       Brand[]
  Product     Product[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("countries")
}

model Brand {
  id          Int       @id @default(autoincrement())
  countryId   Int       @map("country_id")
  name        String
  description String?
  slug        String
  image       String?
  Product     Product[]
  country     Country   @relation(fields: [countryId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("brands")
}

model Product {
  id                 Int              @id @default(autoincrement())
  countryId          Int              @map("country_id")
  brandId            Int              @map("brand_id")
  categoryId         Int              @map("category_id")
  voltageId          Int?             @map("voltage_id")
  ageId              Int?             @map("age_id")
  subCategoryId      Int?             @map("sub_category_id")
  name               String
  description        String
  characteristics    String?
  articul            String
  gearbox            String?
  battery            String?
  maximumLoad        Int?             @map("maximum_load")
  assembledModelSize String?          @map("assembled_model_size")
  modelSizeInPackage String?          @map("model_size_in_package")
  video              String?
  image              String?
  bestseller         Boolean          @default(false)
  new                Boolean          @default(false)
  inStock            Boolean          @default(true) @map("in_stock")
  defaultPrice       Int              @default(0) @map("default_price")
  rating             Float            @default(0)
  metaTitle          String?          @map("meta_tile")
  metaDescription    String?          @map("meta_description")
  metaKeyWords       String?          @map("meta_key_words")
  slug               String
  createdAt          DateTime         @default(now()) @map("created_at")
  updatedAt          DateTime         @updatedAt @map("updated_at")
  colors             Color[]
  ProductsColors     ProductsColors[]
  Basket             Basket[]
  Review             Review[]
  Product_variant    ProductVariant[]

  country            Country          @relation(fields: [countryId], references: [id], onDelete: Cascade)
  brand              Brand            @relation(fields: [brandId], references: [id], onDelete: Cascade)
  category           Category         @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  voltage            Voltage?         @relation(fields: [voltageId], references: [id], onDelete: Cascade)
  age                Age?             @relation(fields: [ageId], references: [id], onDelete: Cascade)

  @@map("products")
}

model ProductVariant {
  id                 Int      @id @default(autoincrement())
  productId          Int      @map("product_id")
  colorId            Int      @map("color_id")
  description        String?
  articul            String?
  gearbox            String?
  battery            String?
  maximumLoad        Int?     @map("maximum_load")
  assembledModelSize String?  @map("assembled_model_size")
  modelSizeInPackage String?  @map("model_size_in_package")
  video              String?
  inStock            Boolean  @default(true) @map("in_stock")
  price              Int      @default(0)
  images             String[]
  active             Boolean  @default(true)
  product            Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  color              Color    @relation(fields: [colorId], references: [id], onDelete: Cascade)

  @@map("product_variants")
}

model Review {
  id          Int      @id @default(autoincrement())
  productId   Int      @map("product_id")
  username    String
  title       String
  description String
  rating      Int
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  active      Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("reviews")
}

model Category {
  id                 Int              @id @default(autoincrement())
  name               String
  slug               String
  description        String?
  image              String
  Product            Product[]
  createdAt          DateTime         @default(now()) @map("created_at")
  updatedAt          DateTime         @updatedAt @map("updated_at")
  metaTitle          String?          @map("meta_tile")
  metaDescription    String?          @map("meta_description")
  metaKeyWords       String?          @map("meta_key_words")
  SubCategory        SubCategory[]

  @@map("categories")
}

model Basket {
  id              Int            @id @default(autoincrement())
  productId       Int            @map("product_id")
  orderId         Int            @map("order_id")
  quantity        Int
  price           Int
  color           String?
  Product         Product        @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt       DateTime       @default(now()) @map("created_at")
  updatedAt       DateTime       @updatedAt @map("updated_at")
  Order           Order?         @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("basket")
}

model Order {
  id         Int      @id @default(autoincrement())
  name       String
  lastname   String
  phone      String
  address    String?
  price      Int
  read       Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  orderId    Basket[]

  @@map("orders")
}

model Color {
  id              Int              @id @default(autoincrement())
  title           String           @default("")
  color           String?
  image           String?
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  products        Product[]
  ProductsColors  ProductsColors[]
  Product_variant ProductVariant[]

  @@map("colors")
}

model ProductsColors {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  colorId   Int     @map("color_id")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  color     Color   @relation(fields: [colorId], references: [id], onDelete: Cascade)

  @@map("products_colors")
}

model Voltage {
  id        Int     @id @default(autoincrement())
  value     Int
  products  Product[]

  @@map("voltage")
}

model Age {
  id       Int       @id @default(autoincrement())
  value    String
  products Product[]

  @@map("age")
}

model SubCategory {
  id              Int              @id @default(autoincrement())
  name            String
  slug            String
  categoryId      Int              @map("category_id")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  Category        Category         @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("sub_category")
}